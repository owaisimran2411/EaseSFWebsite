<div class="container-fluid">
    <h1>Add New Product - Step 2</h1>
    
    <form method="post" id="step2">
        <div class="mb-3">
            <label for="description" class="form-label">Product Description</label>
            <textarea id="description" name="description" class="form-control"></textarea>
        </div>
        
        <div class="mb-3">
            <label for="hashtags" class="form-label">Hashtags (optional)</label>
            <input type="text" class="form-control" id="hashtags" name="hashtags">
        </div>

        <button type="submit" class="btn btn-primary">Next</button>
    </form>

    <script>
        
        tinymce.init({
            selector: 'textarea',
            plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 
                'image', 'link', 'lists', 'media', 'searchreplace', 'table', 
                'visualblocks', 'wordcount',
                
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | ' +
                    'bold italic underline strikethrough | ' +
                    'link image media table mergetags | ' +
                    'addcomment showcomments | ' +
                    'spellcheckdialog a11ycheck typography | ' +
                    'align lineheight | ' +
                    'checklist numlist bullist indent outdent | ' +
                    'emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => 
                respondWith.string(() => 
                    Promise.reject('See docs to implement AI Assistant')
                ),
        });
        document.getElementById('step2').addEventListener('submit', async function(event) {
            event.preventDefault();
            const productData = JSON.parse(sessionStorage.getItem('productData') || '{}');
            const formData = new URLSearchParams(productData);
            Object.entries(this.elements).forEach(([key,element])=>{
                if(element.name !== "" && element.value !== "" ){
                    formData.append(element.name, element.value);
                }
            })
            try {
                const description = tinymce.get('description').getContent();
                document.getElementById('description').value = description;
                if(document.getElementById('description').value !== ""){
                    formData.append('description', document.getElementById('description').value);
                }
                if(document.getElementById('hashtags').value !== ""){
                    formData.append('hashtags', document.getElementById('hashtags').value);
                }
                const updatedProductData = JSON.stringify(Object.fromEntries(formData));
                console.log(updatedProductData);
                sessionStorage.setItem('productData', updatedProductData)
                const response = await fetch('/admin/products/add-product/step2', {
                    method: 'POST',
                    body: updatedProductData
                });
                if (response.ok) {
                    window.location.href = '/admin/products/add-product/step3';
                } else {
                    console.error('Error during fetch:', response.statusText);
                }
            } catch (error) {
                console.error('Error during fetch:', error);
            }
        })
    </script>
</div>